<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.lixc.mapper.RoleMapper">
    <resultMap id="BaseResultMap" type="com.example.lixc.entity.Role">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="enable" jdbcType="CHAR" property="enable"/>
        <result column="role_description" jdbcType="VARCHAR" property="roleDescription"/>
        <result column="create_by" jdbcType="INTEGER" property="createBy"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_by" jdbcType="INTEGER" property="updateBy"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <resultMap id="roleBackMap" type="com.example.lixc.vo.back.RoleBack">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="enable" jdbcType="CHAR" property="enable"/>
        <result column="role_description" jdbcType="VARCHAR" property="roleDescription"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <collection property="privilegeList" select="com.example.lixc.mapper.RolePrivledgeMapper.getPrivilegesByRoleId"
                    column="{role_id = id}">
        </collection>
    </resultMap>
    <resultMap id="RoleBackMap" type="com.example.lixc.vo.back.RoleBack">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="enable" jdbcType="CHAR" property="enable"/>
        <result column="role_description" jdbcType="VARCHAR" property="roleDescription"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <collection property="privilegeList" ofType="com.example.lixc.entity.Privilege">
            <result column="pid" property="id"></result>
            <result column="pName" property="name"></result>
        </collection>
    </resultMap>
    <sql id="Base_Column_List">
        sr.id, sr.`name`, `enable`, `role_description`, `create_by`, `create_time`, `update_by`, `update_time`,type
    </sql>
    <delete id="deleteBatch">
        delete from sys_role where id in
        <foreach collection="array" item="index" separator="," open="(" close=")">
            #{index}
        </foreach>
    </delete>
    <!--    查询所有的角色列表，其中包含每个角色对应的权限集合-->
    <select id="selectForList" parameterType="com.example.lixc.vo.query.RoleQuery" resultMap="roleBackMap">
        select
        <include refid="Base_Column_List"/>
        from sys_role sr
        <where>
            <if test="startTime != null and startTime != ''.toString()">
                and DATE_FORMAT(sr.create_time,'%y-%M-%d') &gt;= DATE_FORMAT(#{startTime},'%y-%M-%d')
            </if>
            <if test="endTime != null and endTime != ''.toString()">
                and DATE_FORMAT(sr.create_time,'%y-%M-%d') &lt;= DATE_FORMAT(#{endTime},'%y-%M-%d')
            </if>
            <if test="name != null and name != ''">
                and sr.name = #{name}
            </if>
            <if test="id >0">
                and sr.id = #{id}
            </if>
        </where>
    </select>
    <select id="selectRoleDetail" resultMap="RoleBackMap">
        select
        sp.id pid,
        sp.name pName,
        <include refid="Base_Column_List"/>
        from sys_role sr left join sys_role_privledge srp on sr.id = srp.role_id
        left join sys_privilege sp on srp.p_id = sp.id
        <where>
            <if test="id>0">
                and sr.id=#{id}
            </if>
        </where>
    </select>
</mapper>