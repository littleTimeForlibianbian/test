<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.lixc.mapper.UserMapper">
    <resultMap id="AdminUserBackMap" type="com.example.lixc.vo.back.AdminUserBack">
        <!-- 定义结果集，column表示sql查询列,property表示映射到实体的属性 -->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="real_name" jdbcType="VARCHAR" property="realName"/>
        <result column="location" jdbcType="VARCHAR" property="location"/>
        <result column="position" jdbcType="VARCHAR" property="position"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="administrator" jdbcType="CHAR" property="administrator"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <association property="role" javaType="com.example.lixc.entity.Role">
            <result property="id" column="id"/>
            <result property="name" column="name"/>
            <result property="roleDescription" column="role_description"/>
        </association>
    </resultMap>
    <resultMap id="UserBackMap" type="com.example.lixc.vo.back.UserBack">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <id column="enable" jdbcType="INTEGER" property="enable"/>
        <result column="location" jdbcType="VARCHAR" property="location"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="nick_name" jdbcType="VARCHAR" property="nickName"/>
        <result column="real_name" jdbcType="VARCHAR" property="realName"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="painter" jdbcType="VARCHAR" property="painter"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="last_login_time" jdbcType="TIMESTAMP" property="lastLoginTime"/>
        <association property="userAttr" select="com.example.lixc.mapper.UserAttrMapper.selectByUserId"
                     column="id" fetchType="lazy"/>
        <!--        <association property="userAttr" select="com.example.lixc.mapper.UserAttrMapper.selectByUserId"-->
        <!--                     column="{id=user_id}" fetchType="lazy"/>-->
        <collection property="roleList" select="com.example.lixc.mapper.UserRoleMapper.selectListByUserId"
                    column="${user_id=id}" fetchType="lazy"/>
        <collection property="tagList" select="com.example.lixc.mapper.SysUserTagMapper.selectTagsByUserId"
                    column="{user_id=id}" fetchType="lazy"/>
    </resultMap>
    <sql id="Base_Column_List">
        id, role_id, nick_name, real_name, location, position, password, email, phone, status,
    enable, city, administrator, painter, invitation_code, create_by, create_time, update_by,
    update_time, pwd_update_date, last_login_time, last_login_ip
    </sql>
    <select id="existsWithPhone" parameterType="java.lang.String" resultType="java.lang.Integer">
        select count(1) from sys_user su
        <where>
            <if test="phone != null and phone != ''">
                and su.phone = #{phone}
            </if>
            <if test="isManager != null and isManager != ''">
                and su.administrator = #{isManager}
            </if>
        </where>
    </select>
    <select id="existsWithEmail" parameterType="java.lang.String" resultType="java.lang.Integer">
        select count(1) from sys_user su
        <where>
            <if test="email != null and email != ''">
                and su.phone = #{email}
            </if>
            <if test="isManager != null and isManager != ''">
                and su.administrator = #{isManager}
            </if>
        </where>
    </select>

    <select id="selectByUserName" parameterType="com.example.lixc.vo.query.UserQuery"
            resultMap="UserBackMap">
        select
        <include refid="Base_Column_List"/>
        from sys_user su
        <where>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="userName != null and userName != ''">
                and (nickName = #{userName} or email = #{userName})
            </if>
            <if test="id > 0">
                and su.id = #{id}
            </if>
        </where>
    </select>
    <select id="selectAllAdminUsers" parameterType="com.example.lixc.vo.query.AdminUserQuery"
            resultMap="AdminUserBackMap">
        select
        <include refid="Base_Column_List"/>
        from sys_user su where su.administrator = 'Y'
        <where>
            <if test="id > 0 ">
                and id = #{id}
            </if>
            <if test="startTime != null  and startTime != ''">
                and su.create_time >= #{startTime}
            </if>
            <if test="endTime != null  and endTime != ''">
                and su.create_time >= #{endTime}
            </if>
            <if test="email != null  and email != ''">
                and su.email = #{email}
            </if>
        </where>
        order by create_time,id desc
    </select>
    <delete id="delByIds">
        delete
        from sys_user where id in
        <foreach collection="ids" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>

    <select id="selectCountByRoleId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select count(1)
        from sys_user
        where role_id = #{roleId}
    </select>
    <select id="selectAllUser" resultMap="UserBackMap">
        select
        <include refid="Base_Column_List"/>
        from sys_user
        <where>
            <if test="painter != null and painter != '' and painter == 'Y'">
                and painter = #{painter}
            </if>
            <if test="phone != null and phone != '' ">
                and phone = #{phone}
            </if>
            <if test="email != null and email != '' ">
                and email = #{email}
            </if>
            /*前台输入查询参数 可能是邮箱 也可能是用户户名*/
            <if test="userName != null and userName != '' ">
                and(nickName like concat('%',#{userName},'%') or email = #{userName} )
            </if>
            <if test="nickName != null and nickName != '' ">
                and nickName like concat('%',#{nickName},'%')
            </if>
            <if test="userId >0 ">
                and id = #{userId}
            </if>
            # 用户状态
            <if test=" status > 0">
                and status = #{status}
            </if>
            <if test=" enable > 0">
                and enable = #{enable}
            </if>
        </where>
        order by create_time,id desc
    </select>
</mapper>